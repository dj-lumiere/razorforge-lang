// Comprehensive RazorForge test with all features

// Redefine and using statements
redefine Console.WriteLine as print
using System.Collections.Generic as Collections

// Choice declaration
choice Color {
    Red = 1,
    Green = 2,
    Blue = 3
}

// Memory and time literals
let memory_size = 4gb + 512mb
let duration = 30m + 45s + 500ms

recipe test_conditionals() {
    let x = 10
    
    // Unless statement
    unless x > 15 {
        print("x is not greater than 15")
    }

    // Elif statements
    if x < 5 {
        print("x is small")
    } elif x < 10 {
        print("x is medium")
    } elif x < 20 {
        print("x is large")
    } else {
        print("x is very large")
    }

    // Conditional expressions (if A then B else C)
    let message = if x > 5 then "big" else "small"
    print(message)
}

recipe test_comparisons() {
    let y = 8
    let z = 12
    let x = 10
    
    // Chained comparisons
    if 5 < x <= 10 < z < 15 {
        print("Values are in ascending order within ranges")
    }
}

recipe test_text_encoding() {
    // Multi-encoding text literals
    let text8 = t8"Hello in 8-bit"
    let text16 = t16"Hello in 16-bit" 
    let text32 = t32"Hello in 32-bit"
    let formatted = f"Memory: {memory_size}, Duration: {duration}"
    
    print(text8)
    print(text16)
    print(text32)
    print(formatted)
}

recipe main() {
    test_conditionals()
    test_comparisons()
    test_text_encoding()
    
    let color = Color.Red
    print("Selected color: " + color)
}